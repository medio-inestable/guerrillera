[gd_scene load_steps=16 format=2]

[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_Displacement.jpg" type="Texture" id=1]
[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_Normal.jpg" type="Texture" id=2]
[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_Opacity.jpg" type="Texture" id=3]
[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_Color.jpg" type="Texture" id=4]
[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_AmbientOcclusion.jpg" type="Texture" id=5]
[ext_resource path="res://Assets/Modelos/Texturas/Blood-Rust001/Rust001_1K_Roughness.jpg" type="Texture" id=6]

[sub_resource type="SphereMesh" id=8]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 5 )

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 6 )

[sub_resource type="VisualShader" id=7]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_5;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:5
	vec4 tex_frg_5_read = texture(tex_frg_5, UV.xy);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	ALBEDO = n_out3p0;
	ALPHA = dot(n_out6p0, vec3(0.333333, 0.333333, 0.333333));
	ROUGHNESS = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333));
	AO = dot(n_out2p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out5p0;
	NORMALMAP_DEPTH = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -142.447, -78.8531 )
nodes/fragment/0/position = Vector2( 720, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 320, 440 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 320, -220 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 320, 880 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 320, 660 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 320, 0 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 320, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 6, 3, 0, 0, 0, 4, 0, 0, 9, 5, 0, 0, 8, 6, 0, 0, 1, 7, 0, 0, 3 )

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 7 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 8 )
material/0 = SubResource( 9 )
